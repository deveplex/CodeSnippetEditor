<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseOn.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- *********************************  ComboBox Template  ********************************* -->
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ControlStyle}">
        <Style.Resources>
            <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
                <Border x:Name="Back" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                    <Path x:Name="Arrow" Grid.Column="1" Width="10" Height="6" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding BorderBrush}" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Stretch="Fill" RenderTransformOrigin="0.5, 0.5"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="Back" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"></Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border Grid.Column="0" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="0.3*" MaxWidth="25" MinWidth="16"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="Input" Text="{TemplateBinding Text}" HorizontalAlignment="Left" VerticalContentAlignment="Center" Style="{x:Null}" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0"/>
                                <ToggleButton Grid.Column="1" Template="{StaticResource ComboBoxToggleButtonTemplate}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Focusable="False" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0"></ToggleButton>
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup" IsOpen="{TemplateBinding IsDropDownOpen}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" Placement="Bottom" Focusable="False" PopupAnimation="Slide">
                            <Border x:Name="DropDown" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1" SnapsToDevicePixels="True">
                                <ScrollViewer Style="{DynamicResource ScrollViewerStyle}" MinHeight="15" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <!--<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>-->
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="Input" Property="IsReadOnly" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="False">
                            <Setter TargetName="Input" Property="IsReadOnly" Value="True"/>
                            <Setter TargetName="Input" Property="Cursor" Value="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Height" Value="26"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type DataGridComboBoxColumn}" TargetType="{x:Type DataGridComboBoxColumn}">
        <Setter Property="EditingElementStyle" Value="{StaticResource {x:Type ComboBox}}" />
    </Style>
</ResourceDictionary>