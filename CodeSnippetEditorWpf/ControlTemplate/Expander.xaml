<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseOn.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- *********************************  Expander Template  ********************************* -->

    <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}" BasedOn="{StaticResource ControlStyle}">
        <Style.Resources>
            <ControlTemplate x:Key="ExpanderToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" >
                    <Grid  HorizontalAlignment="{Binding Path=HorizontalAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}, Mode=OneWayToSource}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  Width="*"/>
                            <ColumnDefinition  Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Grid.Column="0"/>
                        <Grid Grid.Column="1">
                            <Rectangle x:Name="rectangle" Width="22" Height="22" Fill="{x:Null}" HorizontalAlignment="Center" Stroke="{x:Null}" VerticalAlignment="Center" />
                            <Path x:Name="arrowDown" Fill="{x:Null}" Width="10" Height="10" StrokeThickness="{TemplateBinding Foreground}" Stroke="{TemplateBinding Foreground}" Data="F1 M 0,0 L 0.5,0.5,1,0 M 0,0.5 L 0.5,1,1,0.5" Stretch="Uniform" RenderTransformOrigin="0, 0" Visibility="Hidden"/>
                            <Path x:Name="arrowUp" Fill="{x:Null}" Width="10" Height="10" Stroke="{TemplateBinding Foreground}" Data="F1 M 0,1 L 0.5,0.5,1,1 M 0,0.5 L 0.5,0,1,0.5" Stretch="Uniform" RenderTransformOrigin="0, 0" Visibility="Visible"/>
                        </Grid>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="False">
                        <Setter Property="Visibility" TargetName="arrowDown" Value="Visible" />
                        <Setter Property="Visibility" TargetName="arrowUp" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="FontWeight" Value="Bold">
                        <Setter Property="StrokeThickness" TargetName="arrowDown" Value="2" />
                        <Setter Property="StrokeThickness" TargetName="arrowUp" Value="2" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" Template="{StaticResource ExpanderToggleButtonTemplate}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                            </ToggleButton>
                            <ContentPresenter x:Name="ExpandSite" Content="{TemplateBinding Content}" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                            <!--<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />-->
                            <!--<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" /> Template="{StaticResource ExpanderToggleButtonTemplate}"-->
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                            <!--<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />-->
                            <!--<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />-->
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                            <!--<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />-->
                            <!--<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Background" TargetName="HeaderSite" Value="{x:Null}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>