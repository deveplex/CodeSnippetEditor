<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CodeSnippetEditor.ControlTemplate">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseOn.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- *********************************  DataGrid Template  ********************************* -->

    <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource ControlStyle}">
        <Style.Resources>
            <SolidColorBrush x:Key="UIColors.GridLinesBrushKey" Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
            
            <ControlTemplate x:Key="DataGridColumnHeaderTemplate" TargetType="{x:Type DataGridColumnHeader}">
                <Border BorderBrush="Blue" BorderThickness="1" Height="{Binding Path=ColumnHeaderHeight,RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}" Padding="{Binding Path=Padding,RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </ControlTemplate>

            <ControlTemplate x:Key="DataGridCellTemplate" TargetType="{x:Type DataGridCell}">
                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource UIColors.GridLinesBrushKey}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource UIColors.GridLinesBrushKey}"/>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <!--<Setter Property="Template" Value="{DynamicResource DataGridColumnHeaderTemplate}"/>-->
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <!--<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalAlignment,RelativeSource={RelativeSource Mode=Self}}"/>-->
                    <Setter Property="Padding" Value="8,0,8,0"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalAlignment,RelativeSource={RelativeSource Mode=Self}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalAlignment,RelativeSource={RelativeSource Mode=Self}}"/>
                    <Setter Property="Padding" Value="0,3"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Template" Value="{StaticResource DataGridCellTemplate}"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="{Binding Path=Background,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="{Binding Path=AlternatingRowBackground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType={x:Type DataGrid}}}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>